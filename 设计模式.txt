Java设计模式
意义，首先学习各种常见的设计模式写法，以及使用场景，在编程实践中有意识的主动尝试使用它，提升代码规范程度。
为什么有工厂模式，使用工厂模式创建对象，逻辑在工厂内部，调用者无需关心，调用者只根据需要传入参数就可以得到想要的对象。
有时对象构建过程比较复杂，这个工作交给调用者去完成是不合理的，也会造成代码可读性差。
工厂模式就是把原本调用者创建对象的工作承接到工厂内部去做。
https://blog.csdn.net/mashaokang1314/article/details/84663840
https://blog.csdn.net/xyajia/article/details/80255112
https://blog.csdn.net/qq_27712229/article/details/88596744
工厂模式: 
	简单工厂模式(静态工厂方法模式)、工厂方法模式、抽象工厂模式
	
	
	简单工厂模式: 
		1.准备抽象产品接口。
		2.准备各个实现了抽象产品接口的产品类。
		3.准备工厂类，具有静态获取产品的方法，在这个方法中根据入参的不同，生产具体种类的产品，并用抽象产品接口引用。
     	缺点：违反了设计模式的“开闭原则”，(对扩展开放，对修改关闭，程序需要扩展的时候，不能去修改原有代码)，但是也不是说不可用，随着业务变动，你的代码还是可能一直变化中。
	    示例 org.slf4j.LoggerFactory
	
	工厂方法模式：
		1. 准备工厂接口。
		2. 准备实现工厂接口的具体工厂类。
		3.准备抽象产品接口。
		4.准备各个实现了抽象产品接口的产品类。
		5.使用中根据需要，创建不同的工厂，工厂在生产对应种类的实例对象。
